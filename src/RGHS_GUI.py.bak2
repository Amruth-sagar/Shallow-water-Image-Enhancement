#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 6.2
#  in conjunction with Tcl version 8.6
#    Dec 02, 2021 01:31:33 PM IST  platform: Windows NT

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import RGHS_GUI_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = Toplevel1 (root)
    RGHS_GUI_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Toplevel1(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    top = Toplevel1 (w)
    RGHS_GUI_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("1536x801+-75+48")
        top.minsize(120, 1)
        top.maxsize(1540, 845)
        top.resizable(1,  1)
        top.title("New Toplevel")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.Label1 = tk.Label(top)
        self.Label1.place(relx=0.28, rely=0.037, height=121, width=664)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(activeforeground="black")
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(font="-family {Sitka Small} -size 18")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(highlightbackground="#d9d9d9")
        self.Label1.configure(highlightcolor="black")
        self.Label1.configure(relief="sunken")
        self.Label1.configure(text='''Shallow-water Image Enhancement Using Relative Global Histogram Stretching Based on Adaptive Parameter Acquisition''')
        self.Label1.configure(wraplength="600")

        self.InputImageFrame = tk.Frame(top)
        self.InputImageFrame.place(relx=0.039, rely=0.325, relheight=0.469
                , relwidth=0.296)
        self.InputImageFrame.configure(relief='raised')
        self.InputImageFrame.configure(borderwidth="2")
        self.InputImageFrame.configure(relief="raised")
        self.InputImageFrame.configure(background="#d9d9d9")
        self.InputImageFrame.configure(highlightbackground="#d9d9d9")
        self.InputImageFrame.configure(highlightcolor="black")
        self.InputImageFrame.configure(command=self.inputImage)

        self.ContrastCorrFrame = tk.Frame(top)
        self.ContrastCorrFrame.place(relx=0.358, rely=0.325, relheight=0.469
                , relwidth=0.296)
        self.ContrastCorrFrame.configure(relief='raised')
        self.ContrastCorrFrame.configure(borderwidth="2")
        self.ContrastCorrFrame.configure(relief="raised")
        self.ContrastCorrFrame.configure(background="#d9d9d9")
        self.ContrastCorrFrame.configure(highlightbackground="#d9d9d9")
        self.ContrastCorrFrame.configure(highlightcolor="black")

        self.Frame1_1_1 = tk.Frame(self.ContrastCorrFrame)
        self.Frame1_1_1.place(relx=2.574, rely=1.016, relheight=1.0
                , relwidth=1.0)
        self.Frame1_1_1.configure(relief='groove')
        self.Frame1_1_1.configure(borderwidth="2")
        self.Frame1_1_1.configure(relief="groove")
        self.Frame1_1_1.configure(background="#d9d9d9")
        self.Frame1_1_1.configure(highlightbackground="#d9d9d9")
        self.Frame1_1_1.configure(highlightcolor="black")

        self.ColorCorrFrame = tk.Frame(top)
        self.ColorCorrFrame.place(relx=0.677, rely=0.325, relheight=0.469
                , relwidth=0.296)
        self.ColorCorrFrame.configure(relief='raised')
        self.ColorCorrFrame.configure(borderwidth="2")
        self.ColorCorrFrame.configure(relief="raised")
        self.ColorCorrFrame.configure(background="#d9d9d9")
        self.ColorCorrFrame.configure(highlightbackground="#d9d9d9")
        self.ColorCorrFrame.configure(highlightcolor="black")

        self.Frame1_1_1_1 = tk.Frame(self.ColorCorrFrame)
        self.Frame1_1_1_1.place(relx=2.574, rely=1.016, relheight=1.0
                , relwidth=1.0)
        self.Frame1_1_1_1.configure(relief='groove')
        self.Frame1_1_1_1.configure(borderwidth="2")
        self.Frame1_1_1_1.configure(relief="groove")
        self.Frame1_1_1_1.configure(background="#d9d9d9")
        self.Frame1_1_1_1.configure(highlightbackground="#d9d9d9")
        self.Frame1_1_1_1.configure(highlightcolor="black")

        self.Label2 = tk.Label(top)
        self.Label2.place(relx=0.117, rely=0.275, height=32, width=193)
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(activeforeground="black")
        self.Label2.configure(background="#d9d9d9")
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(font="-family {Tahoma} -size 16")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(highlightbackground="#d9d9d9")
        self.Label2.configure(highlightcolor="black")
        self.Label2.configure(text='''Input Image''')

        self.Label2_1 = tk.Label(top)
        self.Label2_1.place(relx=0.423, rely=0.275, height=32, width=273)
        self.Label2_1.configure(activebackground="#f9f9f9")
        self.Label2_1.configure(activeforeground="black")
        self.Label2_1.configure(background="#d9d9d9")
        self.Label2_1.configure(disabledforeground="#a3a3a3")
        self.Label2_1.configure(font="-family {Tahoma} -size 16")
        self.Label2_1.configure(foreground="#000000")
        self.Label2_1.configure(highlightbackground="#d9d9d9")
        self.Label2_1.configure(highlightcolor="black")
        self.Label2_1.configure(text='''Contrast corrected Image''')

        self.Label2_1_1 = tk.Label(top)
        self.Label2_1_1.place(relx=0.749, rely=0.275, height=21, width=254)
        self.Label2_1_1.configure(activebackground="#f9f9f9")
        self.Label2_1_1.configure(activeforeground="black")
        self.Label2_1_1.configure(background="#d9d9d9")
        self.Label2_1_1.configure(disabledforeground="#a3a3a3")
        self.Label2_1_1.configure(font="-family {Tahoma} -size 16")
        self.Label2_1_1.configure(foreground="#000000")
        self.Label2_1_1.configure(highlightbackground="#d9d9d9")
        self.Label2_1_1.configure(highlightcolor="black")
        self.Label2_1_1.configure(text='''Color corrected Image''')

        self.UploadImage = tk.Button(top)
        self.UploadImage.place(relx=0.124, rely=0.824, height=44, width=127)
        self.UploadImage.configure(activebackground="#ececec")
        self.UploadImage.configure(activeforeground="#000000")
        self.UploadImage.configure(background="#d9d9d9")
        self.UploadImage.configure(borderwidth="5")
        self.UploadImage.configure(disabledforeground="#a3a3a3")
        self.UploadImage.configure(font="-family {Lucida Console} -size 10")
        self.UploadImage.configure(foreground="#000000")
        self.UploadImage.configure(highlightbackground="#d9d9d9")
        self.UploadImage.configure(highlightcolor="black")
        self.UploadImage.configure(padx="2")
        self.UploadImage.configure(pady="2")
        self.UploadImage.configure(text='''Upload Image''')
        self.UploadImage.configure(command=self.displayOutput)
    def inputImage():
    def displayOutput():
if __name__ == '__main__':
    vp_start_gui()





